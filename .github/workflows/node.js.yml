# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
  workflow_dispatch:

jobs:

  DEV:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - uses: actions/checkout@v2

      - name: Run a script
        run: |
          echo "I am running a job in the DEV environment"

  display-variables:
    name: Display variables
#    if: ${{ vars.USE_VARIABLES == 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ vars.ENVIRONMENT_STAGE }}
    steps:
    - name: Use the variables
      run: |
        echo "repository variable : $REPOSITORY_VAR"
        echo "organization variable : $ORGANIZATION_VAR"
        echo "overridden variable : $OVERRIDE_VAR"
        echo "variable from shell environment : $env_var"
      env:
        REPOSITORY_VAR: ${{ vars.REPOSITORY_VAR }}
        ORGANIZATION_VAR: ${{ vars.ORGANIZATION_VAR }}
        OVERRIDE_VAR: ${{ vars.OVERRIDE_VAR }}
        
    - name: ${{ vars.JWT_ENVIRONMENT }}
      if: ${{ vars.HELLO_WORLD_ENABLED == 'true' }}
      uses: actions/hello-world-javascript-action@main
      with:
        who-to-greet: ${{ vars.GREET_NAME }}
        
  print-vars:
    runs-on: ubuntu-latest
    environment:
      name: qa.env
    steps:
      - name: Print the vars to STDOUT
        run: |
          echo "ENVIRONMENT_NAME = " ${{ env.JWT_ENVIRONMENT }}
          echo "Using qa.env to call env = " ${{ qa.env.JWT_ENVIRONMENT }}
          echo "The password = " ${{ secrets.JWT_AUTH_PASSWORD }}

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - run: npm ci

    - name: Build
      run: npm run build
